/*
 * This build file was auto generated by running the Gradle 'buildSetup' task
 * by 'stefan.marx' at '09.10.13 14:44' with Gradle 1.7
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.7/userguide/tutorial_java_projects.html
 */


apply plugin: 'java'
//apply plugin: 'idea'
apply plugin: 'maven'
apply from: 'base.gradle'


version='1.0'


AgentName ='DerrivedMetricsAgent'
AgentPackageName='DerrivedMetricsAgent'

repositories {
    maven {
//        url "https://raw.github.com/Appdynamics/artifact-library/master/repo/"
        url "file:///vlab/maven/artifact-library/repo/"
    }
    maven {
        url "file:///vlab/maven/private-artifact-library/repo/"
    }
}

// no transitive Dependencies for compile only APIs
configurations.compileOnly.transitive=false

configurations {
    agentRuntime
    agentBinary
}


dependencies {
    compile ("log4j:log4j:1.2.17")
    compile "com.appdynamics:machineagent:4.1.0"

    compile 'org.codehaus.groovy:groovy-all:2.4.6'
    compile 'com.appdynamics.ace.restQuery:RestMetricQueries:0.4.7'

    agentBinary "com.appdynamics:MachineAgent:4.1.0@zip"

    agentRuntime 'org.codehaus.groovy:groovy-all:2.4.6'
    agentRuntime 'com.appdynamics.ace.restQuery:RestMetricQueries:0.4.7'


}


generateMonitorXML {
    agentDescription = "TestAgent"
    timeout = 120
    agentName=AgentName
    mainClass = 'com.appdynamics.ace.agents.derrivedMetrics.DerrivedMetricsAgent'
    classpath = "${AgentName}.jar"    // be carefull this is a hardcoded Name !!!
}


jar {
    archiveName="${AgentName}.jar"
}


task packageAgent (type: Zip) {
    archiveName = AgentPackageName+".zip"
    into(AgentName+"/lib") {
        from(project.configurations.agentRuntime)
    }
    into(AgentName) {
        from jar
        from generateMonitorXML

    }


}

tasks.assemble.dependsOn(packageAgent)



task installSandbox() {
    doLast {
        copy {
            configurations.agentBinary.filter { it.toString().endsWith(".zip") }.each {
                from zipTree(it)
            }
            into 'build/sandbox/agent'
        }
        copy {
            files("build/distributions/"+AgentPackageName+".zip").each{
                from zipTree(it)
            }
            into 'build/sandbox/agent/monitors'
        }
    }
}

tasks.installSandbox.dependsOn(packageAgent)
tasks.packageAgent.dependsOn(jar)
